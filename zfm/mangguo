MongoDB shell version v3.4.4
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.4.4
> 
           ########       首次进入芒果db 先在admin 建立一个管理用户

>use admin   
ver={user:"root",pwd:"root123",roles:[{role:"userAdminAnyDatabase", db:"admin"}]} 
db.createUser(user)
 
-----------------------------------------------------------------------------  先忽略  ----------------------------------- 
> use admini                          进入admin库
switched to db admin
> db.auth("wangchao","wangchao")     认证   admin下面有个wangchao的用户   后面wangchao为密码
1
> show collections                    查看下面有哪些库
cname
honglu
system.users
system.version
t1
> db.t1.find()
{ "_id" : ObjectId("599e78347e8195119f224467"), "name" : "zhangsan", "old" : 34 }
{ "_id" : ObjectId("599e78367e8195119f224468"), "name" : "zhangsan", "old" : 35 }
{ "_id" : ObjectId("599e78387e8195119f224469"), "name" : "zhangsan", "old" : 36 }
{ "_id" : ObjectId("599e783a7e8195119f22446a"), "name" : "zhangsan", "old" : 37 }
{ "_id" : ObjectId("599e783b7e8195119f22446b"), "name" : "zhangsan", "old" : 38 }
> 
> 
> use zhitou                             去其他库
switched to db zhitou
> db.auth("neihaiyong2","123456")         认证    
1 
> show collections                        查看有哪些库
t2
yy
> 
> db.yy.find()                                                           查询
{ "_id" : ObjectId("599ea00f73911f7dab04cee1"), "name" : "ddd" }
{ "_id" : ObjectId("599ea01273911f7dab04cee2"), "name" : "dddd" }
{ "_id" : ObjectId("599ea01373911f7dab04cee3"), "name" : "ddddd" }
{ "_id" : ObjectId("599ea01573911f7dab04cee4"), "name" : "dddddf" }
{ "_id" : ObjectId("599ea01673911f7dab04cee5"), "name" : "dddddfg" }
{ "_id" : ObjectId("599ea08073911f7dab04cee7"), "name" : "dddddfgddd" }
{ "_id" : ObjectId("599ea08273911f7dab04cee8"), "name" : "dddddfgdddffff" }
{ "_id" : ObjectId("599ea08473911f7dab04cee9"), "name" : "dddddfgdddffffggg" }
-------------------------------------------------------------------------------------------一直到这---------------------------------------

========================================================================================================================

> use qihuo                            暂且没有这个库  但是我先进入这个库
switched to db yangjun
> var user={user:"rrr",pwd:"rrr",roles:[{role:"readWrite", db:"yangjun"}]}        在这个库创建
> db.createUser(user)
Successfully added user: {
	"user" : "rrr",
	"roles" : [
		{
			"role" : "readWrite",
			"db" : "yangjun"
		}
	]
}
> db.auth("rrr","rrr")                        认证   如果这步出现问题 可以use admin ; db.grantRolesToUser( "root" , [ { role: "dbOwner", db: "qihuo" } ])  # 是有
1
> show collections                  查看














-------------------------------------------------------------------------------------
2018-01-22T16:30:25.618+0800 I CONTROL  [initandlisten] 
> 
> use admin
switched to db admin
> db.createUser({user:"root", pwd: "wangchaoroot", roles: ["root"]})
2018-01-22T16:31:11.840+0800 E QUERY    [thread1] Error: couldn't add user: User "root@admin" already exists :
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.createUser@src/mongo/shell/db.js:1290:15
@(shell):1:1
         > db.createUser({user:"wangchaonew", pwd: "wangchaonew", roles: ["root"]})
         Successfully added user: { "user" : "wangchaonew", "roles" : [ "root"  ]  }
         > db
         admin
         > db.createUser({user:"admin", pwd:"admin", roles:
                 ... [{role:"userAdminAnyDatabase", db:"admin"}]})^C

         > 
         > 
         > db.createUser({user:"wangchaoadmin", pwd:"wangchaoadmin", roles:[{role:"userAdminAnyDatabase", db:"admin"}]})
         Successfully added user: {
                "user" : "wangchaoadmin",
                    "roles" : [
                    {
                                    "role" : "userAdminAnyDatabase",
                                                "db" : "admin"
                                                            
                    }
                    
                    ]

         }
> use wangchaodatabase
switched to db wangchaodatabase
> db.createUser({user:"wangchaotestku", pwd:"wangchaotestku", roles:["readWrite", "dbAdmin"]})
Successfully added user: { "user" : "wangchaotestku", "roles" : [ "readWrite", "dbAdmin"  ]  }
> db.auth("wangchaotestku","wangchaotestku")
1
> exit
bye








mongodb 有三种模式

1  就是主从  他是启动的时候 --master  --slave  启动的
2  就是副本集  他是mongod --port 27017 --dbpath "D:\set up\mongodb\data" --replSet rs0   先启动一个实例  然后进入这个实力 添加别的(此时别的mongod也是起来了) 然后再rs.add("ip:27017")  好的网站 
    https://www.cnblogs.com/ee900222/p/mongodb_2.html     mongod -f ../conf/MongoDB1.conf --port 27018 --replSet rs0
3  就是分片的概念了


https://www.jianshu.com/p/d5e693f99760 ########mongodb  分片集群最佳网站
https://www.cnblogs.com/ityouknow/p/7566682.html
https://www.jianshu.com/p/6648efd24f25

-------------------------------------------------------------
bsondump  mongo  mongod  mongodump  mongoexport  mongofiles  mongoimport  mongooplog  mongoperf  mongorestore  mongos  mongostat  mongotop
          mangodb分片和config启动                                                                          mongodb路由启动

启动顺序  1 先启动 config(如果是集群的话,先启动3台config 然后进入某台机器的21000端口)
			rs.initiate({_id:"cfgReplSet",configsvr:true,
             		members:[{_id:0,host:"mdb1:21000"},
                      	{_id:1,host:"mdb2:21000"},
                      	{_id:2,host:"mdb3:21000"}]})
			

	  2 然后启动分片
			启动的时候添加原始分片(首先是添加副本集的名字 此时还没有添加副本集)
			sudo /usr/local/server/mongodb/bin/mongod --shardsvr --replSet shard1ReplSet --port 22001 --dbpath /data/mongodb/shard1/data --logpath /data/mongodb/shard1/log/shard1.log --fork --nojournal
    			sudo /usr/local/server/mongodb/bin/mongod --shardsvr --replSet shard2ReplSet --port 22002 --dbpath /data/mongodb/shard2/data --logpath /data/mongodb/shard2/log/shard2.log --fork --nojournal
    			sudo /usr/local/server/mongodb/bin/mongod --shardsvr --replSet shard3ReplSet --port 22003 --dbpath /data/mongodb/shard3/data --logpath /data/mongodb/shard3/log/shard3.log --fork --nojournal
			先进入到一台机器的分片端口里面添加副本集信息(例如登陆这台机器的分片端口 配置其他的端口加进来 其实就是添加当前进入端口的分片副本集)
			rs.initiate({_id:"shard1ReplSet",
         		members:[{_id:0,host:"mdb1:22001"},
                  	{_id:1,host:"mdb2:22001"},
                  	{_id:2,host:"mdb3:22001"}]})

	  3 在启动 路由 (路由集群)
			sudo  /usr/local/server/mongodb/bin/mongos  --configdb cfgReplSet/mdb1:21000,mdb2:21000,mdb3:21000 --port  20000  --logpath  /data/mongodb/mongos/log/mongos.log --fork
	  4 最后添加分片到路由信息里面(如下此时分片和副本集都已经弄好了)

		上面配置好了之后 需要进入路由配置端口里面 然后 sh.addShard("10.20.20.239:40000")添加集群信息 sh.enableSharding("shardtest"){这里面shardtest是一个库 意思就是开启这个库的分片}
		sh.shardCollection("shardtest.user",{"age":1}) ##对集合user以age作为片键进行分片  

------------------------架构图(所以可以清楚地看见 其实分片结构都是事先设置好的)------------------------

mongo 120.131.0.64:27017 -u root -p KingSoft@1314

服务器	    	234	235		235
组件1	mongos	mongos	mongos
组件2	config server	config server	config server
组件3	shard server1主	shard server1副	shard server1仲裁
组件4	shard server2仲裁  shard server2主	shard server2副
组件5	shard server3副	shard server3仲裁	shard server3主




-------------------------------------------------------------       mongodb 3.x 4.x  创建用户 是一样的   ------------------------------------------------------
执行如下命令启动MongoDB：
docker run --name mongo-test -d -p 27017:27017 -v /storage/mongo/data:/data/db mongo:3.4.3 --auth
接下来，我们需要进入容器的命令行去创建用户名和密码：########### 直接不加任何东西进去进去的是test库
use admin
//创建管理员
db.createUser({user:'mongo_admin',pwd:'mongo_admin',roles:[{role:"userAdminAnyDatabase",db:"admin"}]});
//以admin登录
db.auth('mongo_admin','mongo_admin')
//创建并切换数据库
use test                      ---------------> 是否切换成当前的db(admin/wangcho)库无所谓,关键的是上一部,一定要db.auth() 以前我认为的切换db再创建是错误的
//创建用户，分配权限
db.createUser({user:"mongo_test",pwd:"mongo_test",roles:[{role:"dbOwner",db:"test"}]})


